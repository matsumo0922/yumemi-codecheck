package jp.co.yumemi.android.code_check.core.ui.previews

import androidx.compose.ui.tooling.preview.PreviewParameterProvider
import jp.co.yumemi.android.code_check.core.model.GhRepositoryDetail
import kotlinx.datetime.Instant

class GhRepositoryDetailPreviewParameter : PreviewParameterProvider<GhRepositoryDetail> {

    override val values: Sequence<GhRepositoryDetail>
        get() = sequenceOf(dummy)

    private val dummy = GhRepositoryDetail(
        archiveUrl = "https://api.github.com/repos/example/repo/{archive_format}{/ref}",
        isArchived = false,
        assigneesUrl = "https://api.github.com/repos/example/repo/assignees{/user}",
        blobsUrl = "https://api.github.com/repos/example/repo/git/blobs{/sha}",
        branchesUrl = "https://api.github.com/repos/example/repo/branches{/branch}",
        cloneUrl = "https://github.com/example/repo.git",
        collaboratorsUrl = "https://api.github.com/repos/example/repo/collaborators{/collaborator}",
        commentsUrl = "https://api.github.com/repos/example/repo/comments{/number}",
        commitsUrl = "https://api.github.com/repos/example/repo/commits{/sha}",
        compareUrl = "https://api.github.com/repos/example/repo/compare/{base}...{head}",
        contentsUrl = "https://api.github.com/repos/example/repo/contents/{+path}",
        contributorsUrl = "https://api.github.com/repos/example/repo/contributors",
        createdAt = Instant.parse("2023-05-01T12:00:00Z"),
        defaultBranch = "main",
        deploymentsUrl = "https://api.github.com/repos/example/repo/deployments",
        description = "This is a sample repository",
        isDisabled = false,
        downloadsUrl = "https://api.github.com/repos/example/repo/downloads",
        eventsUrl = "https://api.github.com/repos/example/repo/events",
        isFork = false,
        forks = 5,
        forksCount = 5,
        forksUrl = "https://api.github.com/repos/example/repo/forks",
        fullName = "example-user/sample-repo",
        gitCommitsUrl = "https://api.github.com/repos/example/repo/git/commits{/sha}",
        gitRefsUrl = "https://api.github.com/repos/example/repo/git/refs{/sha}",
        gitTagsUrl = "https://api.github.com/repos/example/repo/git/tags{/sha}",
        gitUrl = "git://github.com/example/repo.git",
        hasDiscussions = true,
        hasDownloads = true,
        hasIssues = true,
        hasPages = false,
        hasProjects = true,
        hasWiki = true,
        homepage = "https://example.com",
        hooksUrl = "https://api.github.com/repos/example/repo/hooks",
        id = 12345,
        isTemplate = false,
        issueCommentUrl = "https://api.github.com/repos/example/repo/issues/comments{/number}",
        issueEventsUrl = "https://api.github.com/repos/example/repo/issues/events{/number}",
        issuesUrl = "https://api.github.com/repos/example/repo/issues{/number}",
        keysUrl = "https://api.github.com/repos/example/repo/keys{/key_id}",
        labelsUrl = "https://api.github.com/repos/example/repo/labels{/name}",
        languagesUrl = "https://api.github.com/repos/example/repo/languages",
        license = GhRepositoryDetail.License(
            key = "mit",
            name = "MIT License",
            nodeId = "MDc6TGljZW5zZW1pdA==",
            spdxId = "MIT",
            url = "https://api.github.com/licenses/mit",
        ),
        mergesUrl = "https://api.github.com/repos/example/repo/merges",
        milestonesUrl = "https://api.github.com/repos/example/repo/milestones{/number}",
        mirrorUrl = null,
        name = "sample-repo",
        networkCount = 1,
        nodeId = "MDEwOlJlcG9zaXRvcnkxMjM0NTY=",
        notificationsUrl = "https://api.github.com/repos/example/repo/notifications{?since,all,participating}",
        language = "Kotlin",
        openIssues = 10,
        openIssuesCount = 10,
        owner = GhRepositoryDetail.Owner(
            avatarUrl = "https://avatars.githubusercontent.com/u/123?v=4",
            eventsUrl = "https://api.github.com/users/example/events{/privacy}",
            followersUrl = "https://api.github.com/users/example/followers",
            followingUrl = "https://api.github.com/users/example/following{/other_user}",
            gistsUrl = "https://api.github.com/users/example/gists{/gist_id}",
            gravatarId = "",
            id = 123,
            login = "example-user",
            nodeId = "MDQ6VXNlcjEyMw==",
            organizationsUrl = "https://api.github.com/users/example/orgs",
            receivedEventsUrl = "https://api.github.com/users/example/received_events",
            reposUrl = "https://api.github.com/users/example/repos",
            isSiteAdmin = false,
            starredUrl = "https://api.github.com/users/example/starred{/owner}{/repo}",
            subscriptionsUrl = "https://api.github.com/users/example/subscriptions",
            type = "User",
            url = "https://api.github.com/users/example",
        ),
        parent = null,
        isPrivate = false,
        pullsUrl = "https://api.github.com/repos/example/repo/pulls{/number}",
        pushedAt = Instant.parse("2023-05-10T12:00:00Z"),
        releasesUrl = "https://api.github.com/repos/example/repo/releases{/id}",
        size = 365,
        source = null,
        sshUrl = "git@github.com:example/repo.git",
        stargazersCount = 100,
        stargazersUrl = "https://api.github.com/repos/example/repo/stargazers",
        statusesUrl = "https://api.github.com/repos/example/repo/statuses/{sha}",
        subscribersCount = 42,
        subscribersUrl = "https://api.github.com/repos/example/repo/subscribers",
        subscriptionUrl = "https://api.github.com/repos/example/repo/subscription",
        svnUrl = "https://svn.github.com/example/repo",
        tagsUrl = "https://api.github.com/repos/example/repo/tags",
        teamsUrl = "https://api.github.com/repos/example/repo/teams",
        tempCloneToken = null,
        templateRepository = null,
        topics = listOf("kotlin", "android", "open-source"),
        treesUrl = "https://api.github.com/repos/example/repo/git/trees{/sha}",
        updatedAt = Instant.parse("2023-05-11T15:00:00Z"),
        url = "https://github.com/example/repo",
        visibility = "public",
        watchers = 150,
        watchersCount = 150,
    )
}
